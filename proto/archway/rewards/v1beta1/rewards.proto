syntax = "proto3";
package archway.rewards.v1beta1;

option go_package = "github.com/archway-network/archway/x/rewards/types";

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

// Params defines the module parameters.
message Params {
  option (gogoproto.goproto_stringer) = false;

  // inflation_rewards_ratio defines the percentage of minted inflation tokens that are used for dApp rewards [0.0, 1.0].
  // If set to 0.0, no inflation rewards are distributed.
  string inflation_rewards_ratio = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // tx_fee_rebate_ratio defines the percentage of tx fees that are used for dApp rewards [0.0, 1.0].
  // If set to 0.0, no fee rewards are distributed.
  string tx_fee_rebate_ratio = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// ContractMetadata defines the contract rewards distribution options for a particular contract.
message ContractMetadata {
  option (gogoproto.goproto_stringer) = false;

  // owner_address is the contract owner address that can modify contract reward options (bech32 encoded).
  // That could be the contract admin or the contract itself.
  // If owner_address is set to contract address, contract can modify the metadata on its own using WASM bindings.
  string owner_address = 1;
  // rewards_address is an address to distribute rewards to (bech32 encoded).
  // If not set (empty), rewards are not distributed for this contract.
  string rewards_address = 2;
}

// BlockRewards defines block related rewards distribution data.
message BlockRewards {
  option (gogoproto.goproto_stringer) = false;

  // height defines the block height.
  int64 height = 1;
  // inflation_rewards is the rewards to be distributed.
  cosmos.base.v1beta1.Coin inflation_rewards = 2 [
    (gogoproto.nullable) = false
  ];
  // max_gas defines the maximum gas that can be used for the block (consensus parameter).
  int64 max_gas = 3;
}

// TxRewards defines transaction related rewards distribution data.
message TxRewards {
  option (gogoproto.goproto_stringer) = false;

  // tx_id is the tracking transaction ID (x/tracking is the data source for this value).
  uint64 tx_id = 1;
  // height defines the block height.
  int64 height = 2;
  // fee_rewards is the rewards to be distributed.
  repeated cosmos.base.v1beta1.Coin fee_rewards = 3 [
    (gogoproto.nullable) = false
  ];
}

// BlockTracking is the tracking information for a block.
message BlockTracking {
  option (gogoproto.goproto_stringer) = false;

  // inflation_rewards defines the inflation rewards for the block.
  BlockRewards inflation_rewards = 1 [
    (gogoproto.nullable) = false
  ];

  // tx_rewards defines the transaction rewards for the block.
  repeated TxRewards tx_rewards = 2 [
    (gogoproto.nullable) = false
  ];
}
